basePath: /api/v1
definitions:
  models.Environment:
    properties:
      createdAt:
        type: string
      env:
        additionalProperties:
          type: string
        type: object
      image:
        type: string
      namespace:
        type: string
      ports:
        items:
          type: integer
        type: array
      status:
        type: string
      url:
        type: string
      username:
        type: string
      volumeMounts:
        items:
          $ref: '#/definitions/models.VolumeMount'
        type: array
      volumeSize:
        type: string
    type: object
  models.EnvironmentRequest:
    properties:
      env:
        additionalProperties:
          type: string
        type: object
      image:
        type: string
      ports:
        items:
          type: integer
        type: array
      username:
        type: string
      volumeMounts:
        items:
          $ref: '#/definitions/models.VolumeMount'
        type: array
      volumeSize:
        type: string
    required:
    - username
    type: object
  models.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  models.SuccessResponse:
    properties:
      message:
        type: string
    type: object
  models.VolumeMount:
    properties:
      mountPath:
        type: string
      name:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@k8sgo.com
    name: API Support
  description: API for managing isolated Kubernetes desktop environments
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: K8s Go API
  version: "1.0"
paths:
  /environments:
    get:
      description: Lists all user environments
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Environment'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get all environments
      tags:
      - environments
    post:
      consumes:
      - application/json
      description: Creates a new Kubernetes environment for a user
      parameters:
      - description: Environment Details
        in: body
        name: environment
        required: true
        schema:
          $ref: '#/definitions/models.EnvironmentRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Environment'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create a new user environment
      tags:
      - environments
  /environments/{username}:
    delete:
      description: Deletes a user environment
      parameters:
      - description: Username
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Delete an environment
      tags:
      - environments
    get:
      description: Gets a user environment by username
      parameters:
      - description: Username
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Environment'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get a specific environment
      tags:
      - environments
    put:
      consumes:
      - application/json
      description: Updates a user environment
      parameters:
      - description: Username
        in: path
        name: username
        required: true
        type: string
      - description: Environment Details
        in: body
        name: environment
        required: true
        schema:
          $ref: '#/definitions/models.EnvironmentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Environment'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Update an environment
      tags:
      - environments
swagger: "2.0"
