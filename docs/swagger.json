{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/v1/admin/cleanup": {
            "post": {
                "description": "Deletes all sandboxes that have been running for more than the specified minutes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Trigger cleanup of old sandboxes with Traefik routing",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Age in minutes",
                        "name": "minutes",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authentication token",
                        "name": "auth",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.CleanupResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/sandbox/{userId}": {
            "post": {
                "description": "Creates a new containerized sandbox for a specific user with Traefik IngressRoutes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sandbox"
                ],
                "summary": "Create a user sandbox with Traefik routing",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request body (empty, kept for API compatibility)",
                        "name": "request",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/api.SandboxRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.SandboxResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a containerized sandbox for a specific user including Traefik IngressRoutes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sandbox"
                ],
                "summary": "Delete a user sandbox with Traefik routing",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/sandbox/{userId}/status": {
            "get": {
                "description": "Retrieves the status of a sandbox for a specific user with Traefik IngressRoutes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sandbox"
                ],
                "summary": "Get the status of a user sandbox with Traefik routing",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SandboxStatusResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/sandboxes": {
            "get": {
                "description": "Retrieves a list of all sandboxes with their status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sandbox"
                ],
                "summary": "List all sandboxes with Traefik routing",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SandboxListResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.CleanupResponse": {
            "description": "Cleanup operation response",
            "type": "object",
            "properties": {
                "duration": {
                    "description": "Duration used for cleanup",
                    "type": "string",
                    "example": "configurable timeout"
                },
                "message": {
                    "description": "Response message",
                    "type": "string",
                    "example": "Cleanup triggered successfully"
                }
            }
        },
        "api.ErrorResponse": {
            "description": "Standard API error response",
            "type": "object",
            "properties": {
                "error": {
                    "description": "Error message",
                    "type": "string",
                    "example": "User ID is required"
                }
            }
        },
        "api.Response": {
            "description": "Standard API success response",
            "type": "object",
            "properties": {
                "message": {
                    "description": "Response message",
                    "type": "string",
                    "example": "Sandbox created successfully"
                },
                "userId": {
                    "description": "User ID",
                    "type": "string",
                    "example": "user123"
                }
            }
        },
        "api.SandboxListResponse": {
            "description": "List of all sandboxes",
            "type": "object",
            "properties": {
                "count": {
                    "description": "Count of sandboxes",
                    "type": "integer",
                    "example": 3
                },
                "sandboxes": {
                    "description": "List of sandboxes",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/k8s.SandboxInfo"
                    }
                }
            }
        },
        "api.SandboxRequest": {
            "description": "Request to create a new sandbox.",
            "type": "object"
        },
        "api.SandboxResponse": {
            "description": "Sandbox creation response with URLs",
            "type": "object",
            "properties": {
                "apiUrl": {
                    "description": "API URL for the sandbox",
                    "type": "string",
                    "example": "https://user123-api.tryiris.dev"
                },
                "message": {
                    "description": "Response message",
                    "type": "string",
                    "example": "Sandbox created successfully"
                },
                "userId": {
                    "description": "User ID",
                    "type": "string",
                    "example": "user123"
                },
                "vncUrl": {
                    "description": "VNC URL for the sandbox",
                    "type": "string",
                    "example": "https://user123-vnc.tryiris.dev"
                }
            }
        },
        "api.SandboxStatusResponse": {
            "description": "Response for sandbox status check",
            "type": "object",
            "properties": {
                "createdAt": {
                    "description": "Created timestamp",
                    "type": "string",
                    "example": "2023-04-20T12:00:00Z"
                },
                "exists": {
                    "description": "Whether the sandbox exists",
                    "type": "boolean",
                    "example": true
                },
                "status": {
                    "description": "Sandbox status",
                    "type": "string",
                    "example": "Running"
                },
                "userId": {
                    "description": "User ID",
                    "type": "string",
                    "example": "user123"
                }
            }
        },
        "k8s.ContainerStatus": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "string",
                    "example": "us-central1-docker.pkg.dev/driven-seer-460401-p9/iris-repo/iris_agent:latest"
                },
                "message": {
                    "type": "string",
                    "example": ""
                },
                "name": {
                    "type": "string",
                    "example": "sandbox"
                },
                "ready": {
                    "type": "boolean",
                    "example": true
                },
                "reason": {
                    "type": "string",
                    "example": ""
                },
                "restartCount": {
                    "type": "integer",
                    "example": 0
                },
                "state": {
                    "type": "string",
                    "example": "running"
                }
            }
        },
        "k8s.SandboxInfo": {
            "type": "object",
            "properties": {
                "containerStatuses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/k8s.ContainerStatus"
                    }
                },
                "createdAt": {
                    "type": "string",
                    "example": "2023-04-20T12:00:00Z"
                },
                "initContainerStatuses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/k8s.ContainerStatus"
                    }
                },
                "message": {
                    "type": "string",
                    "example": ""
                },
                "podConditions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[\"PodScheduled\"",
                        "\"Initialized\"",
                        "\"ContainersReady\"",
                        "\"Ready\"]"
                    ]
                },
                "podName": {
                    "type": "string",
                    "example": "user123-deployment-5d8b9c7b8f-2p8x7"
                },
                "podPhase": {
                    "type": "string",
                    "example": "Running"
                },
                "reason": {
                    "type": "string",
                    "example": ""
                },
                "status": {
                    "type": "string",
                    "example": "Running"
                },
                "userId": {
                    "type": "string",
                    "example": "user123"
                }
            }
        }
    }
}