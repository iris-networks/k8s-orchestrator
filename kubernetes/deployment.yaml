apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8sgo
  labels:
    app: k8sgo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: k8sgo
  template:
    metadata:
      labels:
        app: k8sgo
    spec:
      serviceAccountName: k8sgo-sa
      containers:
      - name: k8sgo
        image: shanurcsenitap/irisk8s:amd64
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 256Mi
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: k8sgo
  labels:
    app: k8sgo
spec:
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app: k8sgo
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: k8sgo
  annotations:
    kubernetes.io/ingress.class: "traefik"
spec:
  rules:
  - host: api.tryiris.dev
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: k8sgo
            port:
              number: 80
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: k8sgo-sa
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: k8sgo-role
rules:
- apiGroups: [""]
  resources: ["namespaces", "services", "persistentvolumeclaims"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["networking.k8s.io"]
  resources: ["ingresses"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: k8sgo-rolebinding
subjects:
- kind: ServiceAccount
  name: k8sgo-sa
  namespace: default
roleRef:
  kind: ClusterRole
  name: k8sgo-role
  apiGroup: rbac.authorization.k8s.io