# Default values for k8s-orchestrator.
# This is a YAML-formatted file.

# Deployment configuration
replicaCount: 2

image:
  repository: shanurcsenitap/irisk8s
  pullPolicy: Always
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# Environment variables
env:
  DOMAIN: "pods.tryiris.dev"
  PORT: "8080"

# Resource limits and requests
resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 128Mi

# Pod scaling
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 50
  targetMemoryUtilizationPercentage: 80

# Deployment strategy
strategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 1
    maxUnavailable: 0

# Health checks
livenessProbe:
  httpGet:
    path: /api/v1/health
    port: http
  initialDelaySeconds: 30
  periodSeconds: 20
  timeoutSeconds: 5
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /api/v1/health
    port: http
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 3
  failureThreshold: 3

# Pod disruption budget
podDisruptionBudget:
  enabled: true
  maxUnavailable: 1

# Node selector, affinity and tolerations
nodeSelector: {}
affinity: {}
tolerations: []

# Service configuration
service:
  type: ClusterIP
  port: 80
  targetPort: 8080

# Ingress configuration
ingress:
  enabled: true
  # Set to true to use Traefik IngressRoute instead of standard Kubernetes Ingress
  useTraefik: true
  # Use className with standard Kubernetes Ingress (when useTraefik is false)
  className: "nginx"
  # Traefik specific configuration (when useTraefik is true)
  entryPoints: ["web", "websecure"]
  tlsSecretName: "k8s-orchestrator-tls"
  certResolver: "letsencrypt"
  # Standard Kubernetes Ingress annotations (when useTraefik is false)
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
  # Middleware configuration for Traefik
  middleware:
    enabled: true
    headers:
      enabled: true
      browserXssFilter: true
      contentTypeNosniff: true
      forceSTSHeader: true
      stsIncludeSubdomains: true
      stsPreload: true
      stsSeconds: 31536000
      customFrameOptionsValue: "SAMEORIGIN"
    rateLimit:
      enabled: false
      average: 100
      burst: 50
    compress:
      enabled: true
  hosts:
    - host: api.pods.tryiris.dev
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: k8s-orchestrator-tls
      hosts:
        - api.pods.tryiris.dev

# RBAC configuration
serviceAccount:
  create: true
  name: "k8s-orchestrator-sa"
  annotations: {}

rbac:
  create: true
  rules:
    - apiGroups: [""]
      resources: ["namespaces", "services", "persistentvolumeclaims", "secrets"]
      verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
    - apiGroups: ["apps"]
      resources: ["deployments"]
      verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
    - apiGroups: ["networking.k8s.io"]
      resources: ["ingresses"]
      verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
    - apiGroups: ["storage.k8s.io"]
      resources: ["storageclasses"]
      verbs: ["get", "list", "watch"]

# Cloud provider specific configuration
cloudProvider:
  # AWS specific settings
  aws:
    enabled: false
    ingressClass: "alb"
    annotations:
      alb.ingress.kubernetes.io/scheme: "internet-facing"
      alb.ingress.kubernetes.io/target-type: "ip"
      alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
      alb.ingress.kubernetes.io/ssl-redirect: "443"
    storageClass: "gp2"
  
  # GCP specific settings
  gcp:
    enabled: false
    ingressClass: "nginx"
    annotations:
      nginx.ingress.kubernetes.io/proxy-connect-timeout: "3600"
      nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
      nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    storageClass: "standard-rwo"

# Environment defaults for user environments
userEnvironments:
  defaultImage: "accetto/ubuntu-vnc-xfce-firefox-g3"
  defaultPorts: [3000, 6901]
  defaultVolumeSize: "1Gi"
  
  # Storage class for user PVCs
  storageClass: ""  # Use the cloud provider's default if not specified

# Monitoring and metrics
metrics:
  enabled: false
  serviceMonitor:
    enabled: false
    additionalLabels: {}
    scrapeInterval: 15s

# Network policies
networkPolicies:
  enabled: false

# Additional labels for all resources
commonLabels: {}

# Additional annotations for all resources
commonAnnotations: {}